#include "Labclass.h"

#include "Game.h"
#include "Entity.h"
#include "MakeAndPlay.h"

const unsigned char* labclass::loadlevel(int rx, int ry, int* dataLen)
{
    int t;

    rx=rx-100;
    ry=ry-100;
    if(ry<5)
    {
        rx+=50-2;
        ry+=54;    //lab
    }
    else
    {
        rx+=50-2;
        ry+=50-16; //lab
    }

    t = rx + (ry * 100);
    const unsigned char* result;
    rcol = 0;
    roomname = "";
    roomname_special = false;

    switch(t)
    {
#if !defined(MAKEANDPLAY)

    case rn(50,50):
    {

        static const unsigned char contents[] = {
        155,4,215,193,156,4,188,6,200,157,4,155,4,156,4,188,6,203,157,4,
        155,4,205,149,6,0,200,147,6,155,4,149,6,0,203,147,6,155,4,205,
        149,6,0,200,147,6,155,4,149,6,0,203,147,6,155,4,205,149,6,0,
        200,147,6,155,4,149,6,0,203,147,6,155,4,205,149,6,0,200,147,6,
        155,4,149,6,0,203,147,6,155,4,205,149,6,0,194,171,5,172,5,173,
        5,0,194,147,6,155,4,149,6,0,194,171,5,172,5,173,5,0,197,147,
        6,155,4,205,149,6,0,194,147,6,155,4,149,6,0,194,187,6,188,6,
        189,6,0,194,147,6,155,4,149,6,0,197,147,6,155,4,205,149,6,0,
        194,147,6,155,4,149,6,0,200,147,6,155,4,149,6,0,197,147,6,155,
        4,197,188,6,197,157,4,155,4,149,6,0,194,147,6,155,4,149,6,0,
        200,147,6,155,4,149,6,0,197,147,6,155,4,197,0,197,147,6,155,4,
        149,6,0,194,147,6,155,4,149,6,0,200,147,6,155,4,149,6,0,197,
        147,6,155,4,197,0,197,147,6,155,4,149,6,0,194,147,6,155,4,149,
        6,0,200,147,6,155,4,149,6,0,197,147,6,155,4,197,0,197,147,6,
        155,4,149,6,0,194,147,6,155,4,132,5,172,5,200,133,5,155,4,149,
        6,0,197,147,6,155,4,197,0,197,147,6,155,4,149,6,0,194,147,6,
        155,4,204,149,6,0,197,147,6,155,4,197,0,197,147,6,155,4,149,6,
        0,194,187,6,188,6,202,157,4,155,4,149,6,0,197,147,6,155,4,197,
        0,197,147,6,155,4,149,6,0,206,147,6,155,4,149,6,0,197,147,6,
        155,4,197,172,5,193,173,5,0,194,147,6,155,4,149,6,0,206,147,6,
        155,4,149,6,0,197,147,6,155,4,199,149,6,0,194,147,6,155,4,149,
        6,0,206,147,6,155,4,149,6,0,197,147,6,155,4,199,149,6,0,194,
        147,6,155,4,149,6,0,206,147,6,155,4,149,6,0,197,147,6,155,4,
        199,149,6,0,194,147,6,155,4,132,5,172,5,202,173,5,0,194,147,6,
        155,4,149,6,0,197,147,6,155,4,199,149,6,0,194,147,6,155,4,204,
        149,6,0,194,147,6,155,4,149,6,0,197,147,6,155,4,199,149,6,0,
        194,187,6,188,6,204,189,6,0,194,147,6,155,4,149,6,0,197,147,6,
        155,4,199,149,6,0,212,147,6,155,4,149,6,0,197,147,6,155,4,199,
        149,6,0,212,147,6,155,4,149,6,0,197,147,6,155,4,199,149,6,0,
        212,147,6,155,4,149,6,0,197,147,6,155,4,199,149,6,0,212,147,6,
        155,4,149,6,0,197,147,6,155,4,199,132,5,172,5,212,133,5,155,4,
        149,6,0,197,147,6,155,4,223,149,6,0,197,147,6,155,4,223,149,6,
        0,197,147,6,155,4,197,
        };

        obj.createentity(232, 24, 10, 0, 250500);  // (savepoint)

        if(game.intimetrial)
        {
            obj.createblock(0, 0, 0, 8, 240);
        }

        rcol=1;
        roomname = "Get Ready To Bounce";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(50,51):
    {

        static const unsigned char contents[] = {
        152,4,217,146,6,0,197,144,6,152,4,223,146,6,0,197,144,6,152,4,
        221,153,4,185,6,186,6,0,197,184,6,185,6,195,154,4,152,4,215,153,
        4,186,6,64,193,0,197,64,196,184,6,154,4,152,4,214,146,6,51,0,
        204,52,144,6,185,6,214,186,6,51,0,204,52,144,6,0,229,52,144,6,
        0,229,52,144,6,0,229,52,144,6,0,229,52,144,6,0,229,52,144,6,
        0,229,52,144,6,0,229,52,144,6,0,229,52,144,6,63,204,0,216,52,
        144,6,169,5,203,170,5,51,0,215,52,144,6,152,4,203,146,6,51,0,
        215,52,144,6,152,4,203,146,6,51,0,215,52,144,6,152,4,203,146,6,
        51,0,215,52,144,6,152,4,203,146,6,51,0,215,52,144,6,152,4,203,
        146,6,51,0,215,52,144,6,152,4,203,146,6,51,0,215,52,144,6,152,
        4,203,146,6,51,0,215,52,144,6,152,4,203,146,6,51,0,215,52,144,
        6,152,4,203,146,6,51,0,215,52,144,6,152,4,203,146,6,51,0,215,
        52,144,6,152,4,203,129,5,170,5,63,215,168,5,130,5,152,4,204,129,
        5,169,5,215,130,5,152,4,208,193,
        };

        obj.createentity(112, 180, 11, 192);  // (horizontal gravity line)
        rcol = 0;

        roomname = "It's Perfectly Safe";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(49,51):
    {

        static const unsigned char contents[] = {
        164,4,200,195,165,4,133,7,229,164,4,158,6,0,207,72,194,0,210,164,
        4,158,6,0,229,164,4,158,6,0,229,164,4,158,6,0,229,164,4,158,
        6,0,229,164,4,158,6,0,229,164,4,158,6,0,229,164,4,158,6,0,
        229,164,4,158,6,0,199,71,0,208,71,203,164,4,158,6,0,198,60,157,
        6,59,0,206,60,179,4,180,4,197,157,5,181,5,195,164,4,158,6,0,
        199,72,0,215,156,6,164,4,196,158,6,0,224,156,6,164,4,196,158,6,
        0,224,156,6,164,4,196,158,6,0,224,156,6,164,4,196,158,6,0,224,
        156,6,164,4,196,158,6,0,224,156,6,164,4,196,158,6,0,224,156,6,
        164,4,196,158,6,0,224,156,6,164,4,196,158,6,0,203,71,194,0,196,
        71,194,0,201,156,6,164,4,196,141,5,181,5,216,182,5,0,198,156,6,
        164,4,222,158,6,0,198,156,6,164,4,222,158,6,0,198,156,6,164,4,
        222,158,6,0,198,156,6,164,4,222,158,6,0,198,156,6,164,4,195,
        };

        obj.createentity(96, 124, 11, 120);  // (horizontal gravity line)
        obj.createentity(248, 48, 10, 0, 251490);  // (savepoint)
        rcol = 4;

        roomname = "Rascasse";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(49,52):
    {

        static const unsigned char contents[] = {
        158,4,218,152,6,0,198,150,6,158,4,196,159,4,191,6,199,160,4,158,
        4,193,159,4,191,6,199,160,4,158,4,193,159,4,191,6,128,7,0,198,
        150,6,158,4,196,152,6,68,199,150,6,158,4,193,152,6,68,199,150,6,
        158,4,193,152,6,68,193,0,198,150,6,158,4,196,152,6,0,199,150,6,
        158,4,193,152,6,0,199,150,6,158,4,193,152,6,0,200,150,6,158,4,
        196,152,6,0,199,150,6,158,4,193,152,6,0,199,150,6,158,4,193,152,
        6,0,200,150,6,158,4,196,152,6,0,199,150,6,158,4,193,152,6,0,
        199,150,6,158,4,193,152,6,0,200,150,6,158,4,196,152,6,0,199,150,
        6,158,4,193,152,6,0,199,150,6,158,4,193,152,6,0,200,150,6,158,
        4,196,152,6,0,199,150,6,158,4,193,152,6,0,199,150,6,158,4,193,
        152,6,0,200,150,6,158,4,196,152,6,0,199,150,6,158,4,193,152,6,
        0,199,150,6,158,4,193,152,6,0,200,150,6,158,4,195,191,6,128,7,
        0,199,190,6,191,6,193,128,7,0,199,190,6,191,6,193,128,7,0,200,
        150,6,158,4,195,0,201,68,195,0,199,68,195,0,200,150,6,158,4,195,
        0,226,150,6,158,4,195,0,226,150,6,158,4,195,0,226,150,6,158,4,
        195,0,226,150,6,158,4,195,0,226,150,6,158,4,195,0,226,150,6,158,
        4,195,0,226,150,6,158,4,195,0,207,67,195,0,206,150,6,158,4,195,
        175,5,198,176,5,0,199,174,5,175,5,193,176,5,0,199,174,5,175,5,
        197,136,5,158,4,202,152,6,0,199,150,6,158,4,193,152,6,0,199,150,
        6,158,4,209,152,6,0,199,150,6,158,4,193,152,6,0,199,150,6,158,
        4,209,152,6,0,199,150,6,158,4,193,152,6,0,199,150,6,158,4,209,
        152,6,0,199,150,6,158,4,193,152,6,0,199,150,6,158,4,209,152,6,
        0,199,150,6,158,4,193,152,6,0,199,150,6,158,4,209,152,6,0,199,
        150,6,158,4,193,152,6,0,199,150,6,158,4,209,152,6,67,199,150,6,
        158,4,193,152,6,67,199,150,6,158,4,209,135,5,175,5,199,136,5,158,
        4,193,135,5,175,5,199,136,5,158,4,218,193,
        };

        obj.createentity(248, 136, 10, 1, 252490);  // (savepoint)
        obj.createentity(16, 68, 11, 64);  // (horizontal gravity line)
        obj.createentity(112, 68, 11, 64);  // (horizontal gravity line)
        obj.createentity(64, 164, 11, 64);  // (horizontal gravity line)
        obj.createentity(160, 164, 11, 64);  // (horizontal gravity line)
        rcol = 2;

        roomname = "Keep Going";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(48,52):
    {

        static const unsigned char contents[] = {
        161,4,236,162,4,130,7,204,163,4,161,4,194,162,4,130,7,204,163,4,
        161,4,198,155,6,70,204,153,6,161,4,194,155,6,70,204,153,6,161,4,
        198,155,6,0,204,153,6,161,4,194,155,6,0,204,153,6,161,4,198,155,
        6,0,204,153,6,161,4,194,155,6,0,204,153,6,161,4,198,155,6,0,
        204,153,6,161,4,194,155,6,0,204,153,6,161,4,198,155,6,0,204,153,
        6,161,4,194,155,6,0,204,153,6,161,4,198,155,6,0,204,153,6,161,
        4,194,155,6,0,204,153,6,161,4,198,155,6,0,204,153,6,161,4,194,
        155,6,0,204,153,6,161,4,194,162,4,130,7,194,131,7,0,204,129,7,
        130,7,194,131,7,0,204,129,7,130,7,193,161,4,155,6,70,195,0,204,
        70,196,0,207,161,4,155,6,0,229,161,4,155,6,0,229,161,4,155,6,
        0,229,161,4,155,6,0,229,161,4,155,6,0,229,161,4,155,6,0,229,
        161,4,155,6,0,229,161,4,155,6,0,200,69,194,0,217,161,4,155,6,
        0,200,177,5,178,5,179,5,0,206,177,5,178,5,201,161,4,155,6,0,
        200,153,6,161,4,155,6,0,206,153,6,161,4,202,155,6,0,200,153,6,
        161,4,155,6,0,206,153,6,161,4,202,155,6,0,200,153,6,161,4,155,
        6,0,206,153,6,161,4,202,155,6,0,200,153,6,161,4,155,6,69,196,
        0,196,69,196,153,6,161,4,202,155,6,0,200,153,6,161,4,138,5,178,
        5,195,179,5,0,196,177,5,178,5,195,139,5,161,4,202,155,6,0,200,
        153,6,161,4,197,155,6,0,196,153,6,161,4,207,155,6,0,200,153,6,
        161,4,197,155,6,0,196,153,6,161,4,207,155,6,0,200,153,6,161,4,
        197,138,5,178,5,196,139,5,161,4,207,155,6,0,200,153,6,161,4,220,
        155,6,0,200,153,6,161,4,219,
        };

        obj.createentity(280, 136, 10, 1, 252480);  // (savepoint)
        obj.createentity(48, 52, 11, 104);  // (horizontal gravity line)
        obj.createentity(192, 52, 11, 104);  // (horizontal gravity line)
        obj.createentity(152, 196, 11, 40);  // (horizontal gravity line)
        rcol=3;

        roomname = "Single-slit Experiment";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(48,53):
    {

        static const unsigned char contents[] = {
        167,4,161,6,0,200,159,6,167,4,220,161,6,0,200,159,6,167,4,220,
        161,6,0,200,159,6,167,4,220,161,6,0,200,159,6,167,4,220,161,6,
        0,200,159,6,167,4,220,161,6,0,200,159,6,167,4,220,161,6,0,200,
        159,6,167,4,220,161,6,0,200,159,6,167,4,220,161,6,0,200,159,6,
        167,4,204,168,4,136,7,205,167,4,161,6,0,200,159,6,167,4,204,161,
        6,74,205,167,4,161,6,0,200,135,7,136,7,204,137,7,0,205,167,4,
        161,6,0,229,167,4,161,6,0,229,167,4,161,6,0,229,167,4,161,6,
        0,229,167,4,161,6,0,229,167,4,161,6,0,229,167,4,161,6,0,229,
        167,4,144,5,184,5,229,167,4,247,198,
        };

        obj.createentity(32, 128, 10, 1, 253480);  // (savepoint)
        obj.createentity(187, 88, 12, 56);  // (vertical gravity line)
        obj.createentity(107, 88, 12, 56);  // (vertical gravity line)
        rcol = 5;

        roomname = "Don't Flip Out";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(49,53):
    {

        static const unsigned char contents[] = {
        155,4,230,196,156,4,188,6,200,157,4,155,4,205,188,6,196,157,4,155,
        4,200,149,6,66,200,147,6,155,4,200,156,4,188,6,195,66,196,147,6,
        155,4,200,149,6,0,200,147,6,155,4,200,149,6,66,195,0,196,187,6,
        188,6,200,189,6,0,200,187,6,188,6,200,189,6,0,219,196,172,5,196,
        173,5,0,200,171,5,172,5,200,173,5,0,200,171,5,172,5,195,155,4,
        196,149,6,0,200,147,6,155,4,200,149,6,0,200,147,6,155,4,200,149,
        6,65,200,147,6,155,4,200,149,6,65,200,147,6,155,4,200,132,5,172,
        5,200,133,5,155,4,200,132,5,172,5,200,133,5,155,4,195,197,
        };

        obj.createentity(43, 88, 12, 56);  // (vertical gravity line)
        obj.createentity(123, 88, 12, 56);  // (vertical gravity line)
        obj.createentity(203, 88, 12, 56);  // (vertical gravity line)
        obj.createentity(283, 88, 12, 56);  // (vertical gravity line)

        obj.createentity(156, 128, 20, 1);  // (terminal)
        obj.createblock(5, 156-8, 128, 20, 16, 19);
        rcol = 1;

        roomname = "Shuffled Hallway";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(50,53):
    {

        static const unsigned char contents[] = {
        161,4,199,155,6,0,196,153,6,161,4,224,155,6,0,196,153,6,161,4,
        224,155,6,0,196,129,7,130,7,208,163,4,161,4,206,155,6,0,200,70,
        196,0,200,153,6,161,4,206,155,6,0,214,153,6,161,4,206,155,6,0,
        214,153,6,161,4,206,155,6,0,214,153,6,161,4,206,155,6,0,214,153,
        6,161,4,198,130,7,199,131,7,0,214,153,6,161,4,198,70,200,0,214,
        153,6,161,4,198,0,223,153,6,161,4,198,0,223,153,6,161,4,198,0,
        223,153,6,161,4,198,0,223,129,7,130,7,198,0,223,194,178,5,199,179,
        5,0,222,161,4,199,155,6,0,222,161,4,199,155,6,0,222,161,4,199,
        155,6,0,222,161,4,199,155,6,0,222,161,4,199,155,6,0,222,161,4,
        199,155,6,0,222,161,4,199,155,6,0,200,69,196,0,208,161,4,199,138,
        5,178,5,213,179,5,0,199,161,4,222,155,6,69,199,161,4,222,138,5,
        178,5,199,161,4,231,
        };

        obj.createentity(96, 192, 10, 1, 253500);  // (savepoint)
        obj.createentity(163, 32, 12, 168);  // (vertical gravity line)
        rcol = 3;

        roomname = "Double-slit Experiment";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,53):
    {

        static const unsigned char contents[] = {
        158,4,207,159,4,191,6,214,158,4,207,152,6,68,214,158,4,207,152,6,
        0,214,158,4,207,152,6,0,214,158,4,207,152,6,0,214,158,4,207,152,
        6,0,214,158,4,207,152,6,0,214,158,4,207,152,6,0,214,158,4,207,
        152,6,0,214,158,4,207,152,6,0,214,158,4,207,152,6,0,214,158,4,
        207,152,6,0,214,158,4,207,152,6,0,214,191,6,207,128,7,0,230,68,
        0,197,67,0,230,174,5,175,5,207,0,214,150,6,158,4,207,0,214,150,
        6,158,4,207,0,214,150,6,158,4,207,0,214,150,6,158,4,207,0,214,
        150,6,158,4,207,0,214,150,6,158,4,207,0,214,150,6,158,4,207,0,
        214,150,6,158,4,207,0,214,150,6,158,4,207,0,214,150,6,158,4,207,
        0,214,150,6,158,4,207,67,214,150,6,158,4,207,175,5,214,136,5,158,
        4,247,
        };

        obj.createentity(264, 104, 10, 1, 253510);  // (savepoint)
        obj.createentity(131, 120, 12, 96);  // (vertical gravity line)
        obj.createentity(187, 16, 12, 96);  // (vertical gravity line)
        obj.createentity(40, 112, 10, 0, 253511);  // (savepoint)
        rcol = 2;
        roomname = "They Call Him Flipper";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,53):
    {

        static const unsigned char contents[] = {
        133,7,197,166,4,158,6,0,197,156,6,164,4,216,72,193,0,195,156,6,
        158,6,0,197,156,6,164,4,216,0,197,156,6,158,6,0,197,156,6,164,
        4,216,0,197,156,6,158,6,0,197,156,6,164,4,216,0,197,156,6,158,
        6,0,197,156,6,164,4,216,0,197,156,6,158,6,0,197,156,6,164,4,
        216,0,197,156,6,158,6,0,197,156,6,164,4,216,0,197,156,6,158,6,
        0,197,156,6,164,4,216,0,197,156,6,158,6,0,197,156,6,164,4,216,
        0,197,156,6,158,6,0,197,156,6,164,4,216,0,197,156,6,158,6,0,
        197,156,6,164,4,216,0,197,156,6,158,6,0,197,156,6,164,4,216,0,
        197,156,6,158,6,0,197,156,6,164,4,216,0,197,156,6,158,6,0,197,
        156,6,165,4,133,7,194,166,4,164,4,165,4,133,7,194,166,4,164,4,
        165,4,133,7,194,166,4,164,4,199,0,197,156,6,158,6,0,197,156,6,
        158,6,72,194,156,6,164,4,158,6,72,194,156,6,164,4,158,6,72,194,
        156,6,164,4,199,181,5,182,5,0,195,156,6,158,6,0,197,132,7,134,
        7,0,194,132,7,133,7,134,7,0,194,132,7,133,7,134,7,0,194,132,
        7,133,7,197,166,4,164,4,193,158,6,0,195,156,6,158,6,0,221,156,
        6,164,4,193,158,6,0,195,156,6,158,6,0,221,156,6,164,4,193,158,
        6,0,195,156,6,158,6,0,221,156,6,164,4,193,158,6,0,195,156,6,
        158,6,0,216,71,193,0,194,156,6,164,4,193,158,6,0,195,132,7,134,
        7,0,216,179,4,181,4,0,194,156,6,164,4,193,158,6,0,195,72,193,
        0,216,72,193,0,194,156,6,164,4,193,158,6,0,227,156,6,164,4,193,
        158,6,0,227,156,6,164,4,193,158,6,0,227,156,6,164,4,193,141,5,
        181,5,202,182,5,0,196,180,5,181,5,194,182,5,0,196,180,5,181,5,
        199,142,5,164,4,205,158,6,71,196,156,6,164,4,194,158,6,71,196,156,
        6,164,4,214,141,5,181,5,196,142,5,164,4,194,141,5,181,5,196,142,
        5,164,4,217,193,
        };

        obj.createentity(24, 184, 10, 1, 253520);  // (savepoint)
        obj.createentity(64, 164, 11, 200);  // (horizontal gravity line)
        rcol = 4;
        roomname = "Three's a Crowd";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,52):
    {

        static const unsigned char contents[] = {
        158,4,231,191,6,225,160,4,158,4,196,68,225,150,6,158,4,196,0,225,
        150,6,158,4,196,0,225,150,6,158,4,196,0,225,150,6,158,4,196,0,
        225,150,6,158,4,196,0,225,150,6,158,4,196,0,225,150,6,158,4,196,
        0,225,150,6,158,4,196,0,225,150,6,158,4,196,0,225,150,6,158,4,
        196,0,225,150,6,158,4,196,0,215,67,0,200,150,6,158,4,196,175,5,
        198,159,5,183,4,207,184,4,0,200,150,6,158,4,203,152,6,0,207,68,
        0,200,150,6,158,4,203,152,6,0,217,150,6,158,4,203,152,6,0,217,
        150,6,158,4,203,152,6,0,217,150,6,158,4,203,152,6,0,217,150,6,
        158,4,203,152,6,0,217,150,6,158,4,203,152,6,0,217,150,6,158,4,
        203,152,6,0,217,150,6,158,4,203,152,6,0,217,150,6,158,4,203,152,
        6,0,217,150,6,158,4,203,152,6,0,217,150,6,158,4,203,152,6,0,
        197,67,211,150,6,158,4,203,152,6,0,197,174,5,175,5,210,136,5,158,
        4,203,152,6,0,197,150,6,158,4,223,152,6,0,197,150,6,158,4,216,
        };

        obj.createentity(195, 24, 12, 80);  // (vertical gravity line)
        obj.createentity(195, 128, 12, 80);  // (vertical gravity line)
        obj.createentity(80, 120, 10, 0, 252520);  // (savepoint)
        obj.createentity(80, 96, 10, 1, 252521);  // (savepoint)
        rcol = 2;
        roomname = "Hitting the Apex";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,52):
    {

        static const unsigned char contents[] = {
        152,4,146,6,51,0,205,52,144,6,152,4,213,146,6,51,0,205,52,144,
        6,152,4,201,153,4,185,6,201,152,4,146,6,51,0,205,52,144,6,152,
        4,200,153,4,186,6,64,201,152,4,146,6,51,0,205,52,144,6,152,4,
        195,153,4,185,6,195,186,6,51,0,201,152,4,146,6,51,0,205,52,144,
        6,152,4,194,153,4,186,6,0,207,152,4,146,6,51,0,205,52,144,6,
        152,4,194,146,6,51,0,207,152,4,146,6,51,0,205,52,144,6,152,4,
        194,146,6,51,0,207,152,4,146,6,51,0,205,52,144,6,152,4,194,146,
        6,51,0,207,152,4,146,6,51,0,205,52,144,6,152,4,194,146,6,51,
        0,207,152,4,146,6,51,0,205,52,144,6,152,4,194,146,6,51,0,207,
        152,4,146,6,51,0,205,52,184,6,154,4,152,4,153,4,186,6,51,0,
        207,152,4,146,6,51,0,206,64,184,6,152,5,186,6,64,0,208,152,4,
        146,6,51,0,207,64,144,7,64,0,209,152,4,146,6,51,0,208,64,0,
        210,152,4,146,6,51,0,220,168,5,169,5,198,152,4,146,6,51,0,220,
        144,6,152,4,199,146,6,51,0,220,144,6,152,4,199,146,6,51,0,219,
        52,144,6,152,4,199,146,6,51,0,219,52,144,6,152,4,199,146,6,51,
        0,219,52,144,6,152,4,199,146,6,51,0,219,52,144,6,152,4,199,146,
        6,51,0,219,52,144,6,152,4,199,146,6,51,0,219,52,144,6,152,4,
        199,146,6,51,0,219,52,144,6,152,4,199,146,6,51,0,219,52,144,6,
        152,4,199,146,6,51,0,219,52,144,6,152,4,199,146,6,51,0,219,52,
        144,6,152,4,199,129,5,170,5,63,219,168,5,130,5,152,4,200,129,5,
        169,5,219,130,5,152,4,239,
        };

        obj.createentity(24, 188, 11, 224);  // (horizontal gravity line)
        obj.createentity(280, 96, 10, 1, 252510);  // (savepoint)

        obj.createentity(204, 32, 20, 0);  // (terminal)
        obj.createblock(5, 204-8, 32, 20, 16, 20);
        rcol=0;

        roomname = "Square Root";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(51,51):
    {

        static const unsigned char contents[] = {
        164,4,193,165,4,133,7,205,166,4,164,4,193,158,6,59,0,205,60,156,
        6,164,4,194,165,4,134,7,72,205,132,7,166,4,164,4,158,6,59,0,
        205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,6,59,
        0,205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,6,
        59,0,205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,
        6,59,0,205,60,156,6,164,4,194,158,6,59,0,205,60,132,7,191,4,
        134,7,59,0,205,60,156,6,164,4,194,158,6,59,0,206,72,147,7,72,
        0,206,60,156,6,164,4,194,158,6,59,0,207,72,0,207,60,156,6,164,
        4,194,158,6,59,0,224,60,156,6,164,4,194,158,6,59,0,224,60,156,
        6,164,4,194,158,6,59,0,224,60,156,6,164,4,194,158,6,59,0,224,
        60,156,6,164,4,194,158,6,59,0,224,60,156,6,164,4,194,158,6,59,
        0,224,60,156,6,164,4,194,158,6,59,0,224,60,156,6,164,4,194,158,
        6,59,0,224,60,156,6,164,4,194,158,6,59,0,224,60,156,6,164,4,
        194,158,6,59,0,224,60,156,6,164,4,194,158,6,59,0,224,60,156,6,
        164,4,194,158,6,59,0,224,60,156,6,164,4,194,158,6,59,0,207,71,
        0,207,60,156,6,164,4,194,158,6,59,0,206,71,131,6,71,0,206,60,
        156,6,164,4,194,158,6,59,0,205,60,180,5,155,5,182,5,59,0,205,
        60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,6,59,0,
        205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,6,59,
        0,205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,158,6,
        59,0,205,60,156,6,164,4,194,158,6,59,0,205,60,156,6,164,4,141,
        5,182,5,71,205,180,5,142,5,164,4,194,158,6,59,0,205,60,156,6,
        164,4,193,141,5,181,5,205,142,5,164,4,195,158,6,59,0,205,60,156,
        6,164,4,213,158,6,59,0,205,60,156,6,164,4,212,
        };

        obj.createentity(24, 44, 11, 112);  // (horizontal gravity line)
        obj.createentity(176, 180, 11, 112);  // (horizontal gravity line)
        rcol = 4;
        roomname = "Thorny Exchange";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,50):
    {

        static const unsigned char contents[] = {
        155,4,194,156,4,188,6,227,155,4,193,156,4,189,6,66,227,155,4,193,
        149,6,53,0,227,155,4,193,149,6,53,0,227,155,4,193,149,6,53,0,
        227,155,4,193,149,6,53,0,227,155,4,193,149,6,53,0,227,155,4,193,
        149,6,53,0,227,155,4,193,149,6,53,0,227,155,4,193,149,6,53,0,
        227,155,4,193,149,6,53,0,227,155,4,193,149,6,53,0,196,171,5,172,
        5,195,173,5,0,213,171,5,172,5,193,155,4,193,149,6,53,0,195,54,
        147,6,155,4,195,149,6,53,0,211,54,147,6,155,4,195,149,6,53,0,
        196,187,6,188,6,195,189,6,0,212,54,147,6,155,4,195,149,6,53,0,
        223,54,147,6,155,4,195,149,6,53,0,223,54,147,6,155,4,195,149,6,
        53,0,223,54,147,6,155,4,195,149,6,53,0,223,54,147,6,155,4,195,
        149,6,53,0,223,54,147,6,155,4,195,149,6,53,0,223,54,147,6,155,
        4,195,149,6,53,0,223,54,147,6,155,4,195,149,6,53,0,206,65,193,
        0,206,54,147,6,155,4,195,149,6,53,0,205,54,171,5,173,5,53,0,
        205,54,147,6,155,4,195,149,6,53,0,205,54,147,6,149,6,53,0,205,
        54,147,6,155,4,195,149,6,53,0,205,54,147,6,149,6,53,0,205,54,
        147,6,155,4,195,149,6,53,0,205,54,147,6,149,6,53,0,205,54,147,
        6,155,4,195,149,6,53,0,205,54,147,6,149,6,53,0,205,54,147,6,
        155,4,195,132,5,173,5,65,205,171,5,133,5,149,6,53,0,205,54,147,
        6,155,4,196,132,5,172,5,205,133,5,155,4,149,6,53,0,205,54,147,
        6,155,4,213,149,6,53,0,205,54,147,6,155,4,193,
        };

        obj.createentity(32, 28, 11, 296);  // (horizontal gravity line)
        obj.createentity(32, 196, 11, 112);  // (horizontal gravity line)
        obj.createentity(128, 100, 11, 160);  // (horizontal gravity line)
        obj.createentity(88, 112, 10, 0, 250510);  // (savepoint)
        roomname = "Brought to you by the letter G";
        rcol = 1;
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,50):
    {

        static const unsigned char contents[] = {
        191,6,231,68,231,0,231,197,175,5,199,176,5,0,222,158,4,199,152,6,
        55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,
        4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,
        55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,
        4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,
        55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,
        4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,
        55,0,221,158,4,199,152,6,55,0,221,158,4,199,152,6,55,0,221,
        };

        obj.createentity(-8, 28, 11, 336);  // (horizontal gravity line)
        obj.createentity(32, 72, 10, 1, 250520);  // (savepoint)
        rcol=2;

        roomname = "Free Your Mind";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,51):
    {

        static const unsigned char contents[] = {
        152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,
        6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,
        152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,
        6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,
        152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,
        6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,
        152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,
        6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,
        152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,
        6,51,0,221,152,4,199,146,6,51,0,221,152,4,199,146,6,51,0,221,
        152,4,199,129,5,170,5,63,221,152,4,200,129,5,169,5,221,152,4,247,
        193,
        };

        obj.createentity(80, 180, 11, 248);  // (horizontal gravity line)
        rcol=0;
        roomname = "I Changed My Mind, Thelma...";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(53,51):
    {

        static const unsigned char contents[] = {
        217,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,226,60,156,6,164,4,158,6,59,0,
        226,60,156,6,164,4,158,6,59,0,201,71,216,180,5,142,5,164,4,141,
        5,182,5,71,201,181,5,216,142,5,164,4,194,141,5,181,5,201,164,4,
        247,193,
        };

        obj.createentity(-8, 180, 11, 208);  // (horizontal gravity line)
        obj.createentity(240, 180, 11, 88);  // (horizontal gravity line)
        rcol=4;

        roomname = "Indirect Jump Vector";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(53,50):
    {

        static const unsigned char contents[] = {
        136,7,231,74,231,0,202,196,73,0,229,73,140,6,73,0,227,62,183,5,
        164,5,185,5,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,226,62,159,6,
        167,4,161,6,61,0,226,62,159,6,167,4,161,6,61,0,201,
        };

        obj.createentity(-8, 28, 11, 336);  // (horizontal gravity line)
        rcol=5;

        roomname = "In a Single Bound";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(54,50):
    {

        static const unsigned char contents[] = {
        188,6,200,157,4,155,4,194,156,4,188,6,203,157,4,155,4,194,156,4,
        188,6,200,66,200,187,6,157,4,155,4,156,4,189,6,66,203,187,6,157,
        4,155,4,156,4,189,6,66,200,0,200,54,147,6,155,4,149,6,53,0,
        203,54,147,6,155,4,149,6,53,0,209,54,147,6,155,4,149,6,53,0,
        203,54,147,6,155,4,149,6,53,0,209,54,147,6,155,4,149,6,53,0,
        203,54,147,6,155,4,149,6,53,0,209,54,187,6,167,5,189,6,53,0,
        203,54,147,6,155,4,149,6,53,0,210,66,153,7,66,0,204,54,147,6,
        155,4,149,6,53,0,211,66,0,205,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,226,
        54,147,6,155,4,149,6,53,0,226,54,147,6,155,4,149,6,53,0,211,
        65,0,205,54,147,6,155,4,149,6,53,0,210,65,137,6,65,0,204,54,
        147,6,155,4,149,6,53,0,209,54,171,5,161,5,173,5,53,0,203,54,
        147,6,155,4,149,6,53,0,209,54,147,6,155,4,149,6,53,0,203,54,
        147,6,155,4,149,6,53,0,209,54,147,6,155,4,149,6,53,0,203,54,
        147,6,155,4,149,6,53,0,209,54,147,6,155,4,149,6,53,0,203,54,
        147,6,155,4,149,6,53,0,200,
        };

        obj.createentity(-8, 28, 11, 80);  // (horizontal gravity line)
        obj.createentity(112, 28, 11, 96);  // (horizontal gravity line)
        obj.createentity(248, 28, 11, 80);  // (horizontal gravity line)
        rcol=1;

        roomname = "Barani, Barani";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(54,51):
    {

        static const unsigned char contents[] = {
        201,56,150,6,158,4,152,6,55,0,203,56,150,6,158,4,152,6,55,0,
        209,56,150,6,158,4,152,6,55,0,203,56,150,6,158,4,152,6,55,0,
        209,56,150,6,158,4,152,6,55,0,203,56,190,6,143,6,128,7,55,0,
        209,56,150,6,158,4,152,6,55,0,204,68,150,7,68,0,210,56,150,6,
        158,4,152,6,55,0,205,68,0,211,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,226,56,150,6,158,4,152,6,55,0,226,
        56,150,6,158,4,152,6,55,0,205,67,0,211,56,150,6,158,4,152,6,
        55,0,204,67,134,6,67,0,210,56,150,6,158,4,152,6,55,0,203,56,
        174,5,158,5,176,5,55,0,209,56,150,6,158,4,152,6,55,0,203,56,
        150,6,158,4,152,6,55,0,209,56,150,6,158,4,152,6,55,0,203,56,
        150,6,158,4,152,6,55,0,209,56,150,6,158,4,152,6,55,0,203,56,
        150,6,158,4,152,6,55,0,209,56,150,6,158,4,152,6,55,0,203,56,
        150,6,158,4,152,6,55,0,200,67,200,174,5,136,5,158,4,135,5,176,
        5,67,203,174,5,136,5,158,4,135,5,176,5,67,200,175,5,200,136,5,
        158,4,194,135,5,175,5,203,136,5,158,4,194,135,5,175,5,200,158,4,
        247,193,
        };

        obj.createentity(-8, 180, 11, 80);  // (horizontal gravity line)
        obj.createentity(112, 180, 11, 96);  // (horizontal gravity line)
        obj.createentity(248, 180, 11, 80);  // (horizontal gravity line)
        rcol=2;

        roomname = "Safety Dance";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(55,50):
    {

        static const unsigned char contents[] = {
        130,7,195,163,4,161,4,155,6,0,221,58,153,6,161,4,70,195,153,6,
        161,4,155,6,0,221,58,153,6,161,4,0,195,153,6,161,4,155,6,0,
        221,58,153,6,161,4,0,195,153,6,161,4,155,6,0,221,58,153,6,161,
        4,0,195,129,7,130,7,131,7,0,221,58,153,6,161,4,0,228,58,153,
        6,161,4,0,228,58,153,6,161,4,0,228,58,153,6,161,4,0,228,58,
        153,6,161,4,0,228,58,153,6,161,4,0,228,58,153,6,161,4,0,228,
        58,153,6,161,4,0,228,58,153,6,161,4,0,228,58,153,6,161,4,0,
        228,58,153,6,161,4,0,228,58,153,6,161,4,0,219,69,193,0,197,69,
        177,5,139,5,161,4,0,218,58,177,5,179,5,0,197,177,5,139,5,161,
        4,193,0,218,58,153,6,155,6,0,197,153,6,161,4,194,0,218,58,153,
        6,155,6,0,197,153,6,161,4,194,0,218,58,153,6,155,6,0,197,153,
        6,161,4,194,0,218,58,153,6,155,6,0,197,153,6,161,4,194,0,218,
        58,153,6,155,6,0,197,153,6,161,4,194,0,218,58,153,6,155,6,0,
        197,153,6,161,4,194,0,218,58,153,6,155,6,0,197,153,6,161,4,194,
        0,218,58,153,6,155,6,0,197,153,6,161,4,194,0,218,58,153,6,155,
        6,0,197,153,6,161,4,194,0,218,58,153,6,155,6,0,197,153,6,161,
        4,194,0,218,58,153,6,155,6,0,197,153,6,161,4,194,0,218,58,153,
        6,155,6,0,197,153,6,161,4,194,
        };

        obj.createentity(-8, 28, 11, 40);  // (horizontal gravity line)

        rcol=3;
        roomname = "Heady Heights";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(55,49):
    {

        static const unsigned char contents[] = {
        167,4,232,168,4,136,7,201,169,4,167,4,219,161,6,0,200,62,159,6,
        167,4,219,161,6,0,200,62,159,6,167,4,218,136,7,137,7,0,200,62,
        135,7,136,7,203,169,4,168,4,136,7,202,169,4,167,4,0,195,183,5,
        184,5,185,5,61,0,208,159,6,161,6,61,0,200,62,159,6,167,4,0,
        195,159,6,167,4,161,6,61,0,208,159,6,161,6,61,0,200,62,159,6,
        167,4,0,195,159,6,167,4,161,6,61,0,208,159,6,161,6,61,0,200,
        62,159,6,167,4,0,195,159,6,167,4,161,6,61,0,208,159,6,161,6,
        61,0,200,62,159,6,167,4,184,5,195,145,5,167,4,161,6,61,0,208,
        159,6,161,6,61,0,200,62,159,6,167,4,198,161,6,61,0,208,159,6,
        161,6,61,0,200,62,159,6,167,4,198,161,6,61,0,208,159,6,161,6,
        61,0,200,62,159,6,167,4,198,161,6,61,0,208,135,7,137,7,61,0,
        200,62,159,6,167,4,198,161,6,61,0,220,62,159,6,167,4,198,161,6,
        61,0,220,62,159,6,167,4,198,161,6,61,0,220,62,159,6,167,4,198,
        161,6,61,0,220,62,159,6,167,4,198,161,6,61,0,220,62,159,6,167,
        4,198,161,6,61,0,220,62,159,6,167,4,198,161,6,61,0,220,62,159,
        6,167,4,198,144,5,184,5,213,185,5,0,198,62,159,6,167,4,198,168,
        4,136,7,213,137,7,0,198,62,159,6,167,4,198,161,6,0,221,62,159,
        6,167,4,198,161,6,0,221,62,159,6,167,4,198,161,6,0,221,62,159,
        6,167,4,198,161,6,0,221,62,159,6,167,4,198,161,6,0,221,62,159,
        6,167,4,198,161,6,0,221,62,159,6,167,4,198,161,6,0,221,62,159,
        6,167,4,198,161,6,0,221,62,159,6,167,4,
        };


        obj.createentity(160, 176, 10, 0, 249550);  // (savepoint)
        obj.createentity(224, 68, 11, 72);  // (horizontal gravity line)


        //obj.createentity(224, 192, 10, 0, 249550);  // (savepoint)

        if(!game.intimetrial || game.translator_exploring)
        {
            obj.createentity((12 * 8)-4, (6 * 8) + 4, 14); //Teleporter!
        }
        rcol = 5;

        roomname = "Entanglement Generator";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(55,51):
    {

        static const unsigned char contents[] = {
        219,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,
        0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,
        194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,
        146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,
        152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,
        144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,
        144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,
        218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,
        0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,
        194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,
        146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,
        152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,
        144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,
        144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,
        218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,146,6,
        0,197,144,6,152,4,194,0,218,52,144,6,146,6,0,197,144,6,152,4,
        194,0,218,52,144,6,146,6,0,197,144,6,152,4,194,0,218,52,144,6,
        146,6,0,197,144,6,152,4,194,63,218,168,5,130,5,146,6,0,197,144,
        6,152,4,194,169,5,218,130,5,152,4,146,6,0,197,144,6,152,4,223,
        146,6,0,197,144,6,152,4,223,146,6,0,197,144,6,152,4,223,146,6,
        0,197,144,6,152,4,194,
        };

        obj.createentity(-8, 180, 11, 224);  // (horizontal gravity line)

        rcol = 0;
        roomname = "Exhausted?";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(55,52):
    {

        static const unsigned char contents[] = {
        164,4,220,158,6,0,197,156,6,164,4,223,158,6,0,197,156,6,164,4,
        223,158,6,0,197,156,6,164,4,223,158,6,0,197,156,6,164,4,223,158,
        6,0,197,156,6,164,4,223,158,6,0,197,156,6,164,4,196,165,4,133,
        7,215,166,4,164,4,158,6,0,197,156,6,164,4,196,158,6,0,215,156,
        6,164,4,158,6,0,197,156,6,164,4,196,158,6,0,215,156,6,164,4,
        158,6,0,197,156,6,164,4,196,158,6,0,215,156,6,164,4,158,6,0,
        197,156,6,164,4,196,158,6,0,215,156,6,164,4,158,6,0,197,156,6,
        164,4,196,141,5,181,5,205,182,5,0,200,156,6,164,4,158,6,0,197,
        156,6,164,4,211,158,6,0,200,156,6,164,4,158,6,0,197,156,6,164,
        4,211,158,6,0,200,156,6,164,4,158,6,0,197,156,6,164,4,211,158,
        6,0,200,156,6,164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,
        198,60,156,6,164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,
        60,156,6,164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,
        156,6,164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,
        6,164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,
        164,4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,
        4,158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,
        158,6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,
        6,0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,
        0,197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,
        197,156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,197,
        156,6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,197,156,
        6,164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,197,156,6,
        164,4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,197,156,6,164,
        4,211,158,6,59,0,198,60,156,6,164,4,158,6,0,197,156,6,164,4,
        194,
        };

        obj.createentity(32, 64, 9, 10);  // (shiny trinket)
        obj.createentity(120, 72, 10, 1, 252550);  // (savepoint)
        rcol = 4;

        roomname = "The Tantalizing Trinket";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(55,53):
    {

        static const unsigned char contents[] = {
        155,4,200,156,4,188,6,198,189,6,53,0,198,54,147,6,155,4,149,6,
        0,197,147,6,155,4,202,156,4,189,6,66,199,0,199,54,147,6,155,4,
        149,6,0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,
        6,0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,
        0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,
        197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,197,
        147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,197,147,
        6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,194,171,5,
        172,5,193,133,5,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,
        0,194,187,6,188,6,195,157,4,155,4,200,149,6,53,0,207,54,147,6,
        155,4,149,6,0,199,147,6,155,4,200,149,6,53,0,207,54,147,6,155,
        4,149,6,0,199,147,6,155,4,200,149,6,53,0,198,65,0,199,54,147,
        6,155,4,149,6,0,199,147,6,155,4,200,149,6,53,0,197,54,137,6,
        53,0,198,54,147,6,155,4,149,6,0,199,147,6,155,4,200,149,6,53,
        0,197,54,177,6,53,0,198,54,147,6,155,4,149,6,0,199,147,6,155,
        4,200,149,6,53,0,197,54,177,6,53,0,198,54,147,6,155,4,183,6,
        186,4,195,187,4,0,194,147,6,155,4,200,149,6,53,0,197,54,177,6,
        53,0,198,54,147,6,155,4,149,6,0,199,147,6,155,4,200,149,6,53,
        0,197,54,153,7,53,0,198,54,147,6,155,4,149,6,0,199,147,6,155,
        4,200,149,6,53,0,198,66,0,199,54,147,6,155,4,149,6,0,199,147,
        6,155,4,200,149,6,53,0,207,54,147,6,155,4,149,6,0,199,147,6,
        155,4,200,149,6,53,0,207,54,147,6,155,4,149,6,0,199,147,6,155,
        4,200,149,6,53,0,207,54,147,6,155,4,149,6,0,194,171,5,172,5,
        195,133,5,155,4,200,149,6,53,0,207,54,147,6,155,4,149,6,0,194,
        187,6,188,6,193,157,4,155,4,202,149,6,53,0,207,54,147,6,155,4,
        149,6,0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,
        6,0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,
        0,197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,
        197,147,6,155,4,202,149,6,53,0,207,54,147,6,155,4,149,6,0,197,
        147,6,155,4,202,132,5,173,5,65,199,0,199,54,147,6,155,4,149,6,
        0,197,147,6,155,4,203,132,5,172,5,198,173,5,53,0,198,54,147,6,
        155,4,149,6,0,197,147,6,155,4,211,149,6,53,0,198,54,147,6,155,
        4,149,6,0,197,147,6,155,4,194,
        };

        obj.createentity(272, 144, 10, 1, 253550);  // (savepoint)
        obj.createentity(152, 116, 11, 56);  // (horizontal gravity line)
        obj.createentity(139, 16, 12, 72);  // (vertical gravity line)
        obj.createentity(139, 144, 12, 72);  // (vertical gravity line)
        rcol=1;

        roomname = "The Bernoulli Principle";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(55,54):
    {

        static const unsigned char contents[] = {
        167,4,208,161,6,61,0,198,62,159,6,167,4,161,6,0,197,159,6,167,
        4,211,161,6,61,0,198,62,159,6,167,4,161,6,0,197,159,6,167,4,
        211,161,6,61,0,198,62,159,6,167,4,161,6,0,197,159,6,167,4,194,
        136,7,207,169,4,161,6,61,0,198,62,159,6,167,4,161,6,0,197,159,
        6,167,4,194,74,207,159,6,161,6,61,0,198,62,159,6,167,4,161,6,
        0,197,159,6,167,4,194,0,207,159,6,161,6,61,0,198,62,159,6,167,
        4,161,6,0,197,159,6,167,4,194,0,207,159,6,161,6,61,0,198,62,
        159,6,167,4,161,6,0,197,159,6,167,4,194,0,207,159,6,161,6,61,
        0,198,62,159,6,167,4,161,6,0,197,159,6,167,4,194,0,207,135,7,
        137,7,0,200,135,7,136,7,137,7,0,197,159,6,167,4,194,0,227,159,
        6,167,4,194,0,227,159,6,167,4,194,0,227,159,6,167,4,194,0,227,
        159,6,167,4,194,0,227,159,6,167,4,194,0,227,159,6,167,4,194,0,
        227,159,6,167,4,194,0,227,159,6,167,4,194,0,227,159,6,167,4,194,
        0,227,159,6,167,4,194,0,227,159,6,167,4,194,0,207,183,5,184,5,
        210,145,5,167,4,194,0,207,159,6,167,4,214,0,207,159,6,167,4,214,
        0,207,159,6,167,4,214,73,207,159,6,167,4,214,184,5,207,145,5,167,
        4,246,194,
        };

        obj.createentity(216, 144, 10, 1, 254550);  // (savepoint)
        obj.createentity(-8, 60, 11, 136);  // (horizontal gravity line)
        obj.createentity(-8, 172, 11, 136);  // (horizontal gravity line)
        rcol = 5;

        roomname = "Standing Wave";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(54,54):
    {

        static const unsigned char contents[] = {
        220,150,6,158,4,202,0,219,150,6,158,4,202,0,219,190,6,160,4,158,
        4,201,0,219,68,190,6,191,6,201,0,220,68,202,0,212,204,67,202,0,
        219,67,174,5,175,5,201,0,219,174,5,136,5,158,4,201,0,219,150,6,
        158,4,202,0,219,150,6,158,4,202,0,219,150,6,158,4,202,
        };

        obj.createentity(-8, 60, 11, 336);  // (horizontal gravity line)
        obj.createentity(-8, 172, 11, 336);  // (horizontal gravity line)
        rcol=2;

        obj.fatal_top();
        roomname = "Topsy Turvyism";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(53,54):
    {

        static const unsigned char contents[] = {
        254,195,177,5,178,5,195,179,5,0,197,177,5,178,5,199,179,5,0,209,
        129,7,130,7,195,131,7,0,197,129,7,130,7,196,163,4,161,4,193,155,
        6,0,209,70,197,0,197,70,197,129,7,130,7,193,131,7,0,255,198,177,
        5,178,5,193,179,5,69,197,0,197,69,197,0,209,153,6,161,4,193,138,
        5,178,5,196,179,5,0,197,177,5,178,5,195,179,5,0,209,129,7,130,
        7,199,131,7,0,197,129,7,130,7,195,131,7,0,229,196,
        };

        obj.createentity(-8, 60, 11, 120);  // (horizontal gravity line)
        obj.createentity(-8, 172, 11, 40);  // (horizontal gravity line)
        obj.createentity(264, 72, 10, 0, 254530);  // (savepoint)
        obj.createentity(40, 144, 10, 1, 254531);  // (savepoint)
        obj.createentity(160, 60, 11, 48);  // (horizontal gravity line)
        obj.createentity(288, 60, 11, 40);  // (horizontal gravity line)
        obj.createentity(112, 172, 11, 48);  // (horizontal gravity line)
        obj.createentity(208, 172, 11, 120);  // (horizontal gravity line)
        rcol=3;

        obj.fatal_top();
        roomname = "Spike Strip Deployed";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,54):
    {

        static const unsigned char contents[] = {
        240,210,
        };

        obj.createentity(-8, 60, 11, 336);  // (horizontal gravity line)
        obj.createentity(-8, 172, 11, 336);  // (horizontal gravity line)
        obj.createentity(72, 64, 1, 0, 8, 72, 64, 248, 168);  // Enemy, bounded
        obj.createentity(232, 64, 1, 0, 8, 72, 64, 248, 168);  // Enemy, bounded
        obj.createentity(152, 152, 1, 1, 8, 72, 64, 248, 168);  // Enemy, bounded

        obj.fatal_top();
        roomname = "Vibrating String Problem";
        rcol = 5;
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,54):
    {

        static const unsigned char contents[] = {
        219,195,171,5,172,5,173,5,0,228,147,6,155,4,149,6,0,228,147,6,
        155,4,149,6,0,228,147,6,155,4,149,6,0,228,147,6,155,4,149,6,
        0,228,147,6,155,4,149,6,0,228,187,6,188,6,189,6,0,236,195,171,
        5,172,5,173,5,0,228,147,6,155,4,149,6,0,228,147,6,155,4,149,
        6,0,228,147,6,155,4,149,6,0,228,147,6,155,4,149,6,0,228,147,
        6,155,4,149,6,0,228,187,6,188,6,189,6,0,193,196,
        };

        obj.createentity(176, 60, 11, 152);  // (horizontal gravity line)
        obj.createentity(176, 172, 11, 152);  // (horizontal gravity line)
        obj.createentity(-8, 84, 11, 160);  // (horizontal gravity line)
        obj.createentity(-8, 148, 11, 160);  // (horizontal gravity line)
        obj.createentity(160-4, 120, 10, 1, 254510);  // (savepoint)
        rcol=1;

        obj.fatal_top();
        roomname = "Merge";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(50,54):
    {

        static const unsigned char contents[] = {
        240,210,
        };

        obj.createentity(-8, 84, 11, 336);  // (horizontal gravity line)
        obj.createentity(-8, 148, 11, 336);  // (horizontal gravity line)
        obj.createentity(88, 96, 1, 3, 3);  // Enemy
        obj.createentity(40, 120, 1, 3, 3);  // Enemy
        obj.createentity(136, 120, 1, 3, 3);  // Enemy
        rcol = 0;

        obj.fatal_top();

        roomname = "Kids His Age Bounce";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(49,54):
    {

        static const unsigned char contents[] = {
        158,4,196,152,6,0,225,158,4,195,159,4,128,7,0,215,182,4,160,5,
        176,5,0,198,158,4,195,152,6,55,0,215,56,150,6,152,6,0,198,158,
        4,195,152,6,55,0,215,56,150,6,152,6,0,198,158,4,195,152,6,55,
        0,215,56,150,6,152,6,0,198,158,4,195,152,6,55,0,215,56,150,6,
        152,6,0,198,158,4,195,152,6,55,0,215,56,150,6,152,6,0,198,158,
        4,195,152,6,55,0,215,56,150,6,152,6,0,198,158,4,195,152,6,55,
        0,207,67,0,198,56,150,6,152,6,0,198,158,4,195,152,6,55,0,198,
        67,0,198,56,134,6,55,0,197,56,150,6,152,6,0,198,158,4,195,152,
        6,55,0,197,56,134,6,55,0,197,56,174,6,55,0,197,56,150,6,152,
        6,0,198,158,4,195,152,6,55,0,197,56,174,6,55,0,197,56,174,6,
        55,0,197,182,4,136,6,128,7,0,198,158,4,195,152,6,55,0,197,56,
        174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,55,0,197,56,
        174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,55,0,197,56,
        174,6,55,0,197,56,150,7,55,0,207,158,4,195,152,6,55,0,197,56,
        174,6,55,0,198,68,0,208,158,4,195,152,6,55,0,197,56,174,6,55,
        0,216,158,4,195,152,6,55,0,197,56,174,6,55,0,216,158,4,195,152,
        6,55,0,197,56,174,6,55,0,216,158,4,195,152,6,55,0,197,56,174,
        6,55,0,216,158,4,195,152,6,55,0,197,56,174,6,55,0,216,158,4,
        195,152,6,55,0,197,56,174,6,55,0,198,67,0,208,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,134,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,158,4,195,152,6,
        55,0,197,56,174,6,55,0,197,56,174,6,55,0,207,
        };

        obj.createentity(264, 84, 11, 64);  // (horizontal gravity line)
        obj.createentity(240+4, 96, 10, 0, 254490);  // (savepoint)
        obj.createentity(48, 28, 11, 192);  // (horizontal gravity line)
        obj.createentity(120, 148, 11, 208);  // (horizontal gravity line)
        rcol=2;

        roomname = "I'm Sorry";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(49,55):
    {

        static const unsigned char contents[] = {
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,148,7,181,5,208,
        164,4,195,158,6,59,0,197,60,171,6,59,0,197,60,156,6,164,4,212,
        158,6,59,0,197,60,171,6,59,0,197,60,172,6,133,7,208,164,4,195,
        158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,164,4,195,
        158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,164,4,195,
        158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,164,4,195,
        158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,164,4,195,
        158,6,59,0,197,60,171,6,59,0,197,60,171,6,59,0,207,164,4,195,
        158,6,59,0,197,60,147,7,59,0,197,60,147,7,59,0,207,164,4,195,
        158,6,59,0,198,72,0,199,72,0,208,164,4,195,158,6,59,0,217,180,
        5,181,5,198,164,4,195,158,6,59,0,217,156,6,164,4,202,158,6,59,
        0,216,60,156,6,164,4,202,158,6,59,0,216,60,156,6,164,4,202,158,
        6,59,0,216,60,156,6,164,4,202,158,6,59,0,216,60,156,6,164,4,
        202,158,6,59,0,216,60,156,6,164,4,202,158,6,59,0,216,60,156,6,
        164,4,202,141,5,182,5,71,216,180,5,142,5,164,4,203,141,5,181,5,
        216,142,5,164,4,247,195,
        };

        obj.createentity(48, 156, 11, 200);  // (horizontal gravity line)
        obj.createentity(216, 56, 10, 0, 255490);  // (savepoint)
        rcol=4;

        roomname = "Please Forgive Me!";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(50,55):
    {

        static const unsigned char contents[] = {
        224,194,172,5,200,162,5,186,4,218,163,5,172,5,193,155,4,200,149,6,
        66,218,187,6,188,6,202,189,6,0,245,196,172,5,200,173,5,0,221,155,
        4,200,149,6,0,221,155,4,200,149,6,0,221,155,4,200,149,6,0,221,
        155,4,200,149,6,0,221,155,4,200,149,6,0,221,155,4,200,149,6,0,
        221,155,4,200,149,6,0,221,155,4,200,149,6,0,221,155,4,200,149,6,
        0,221,155,4,200,149,6,0,221,155,4,200,149,6,65,218,171,5,172,5,
        193,155,4,200,132,5,172,5,218,133,5,155,4,249,193,
        };

        obj.createentity(131, 48, 12, 152);  // (vertical gravity line)
        obj.createentity(179, 48, 12, 152);  // (vertical gravity line)
        obj.createentity(227, 48, 12, 152);  // (vertical gravity line)
        obj.createentity(275, 48, 12, 152);  // (vertical gravity line)
        rcol=1;

        roomname = "Playing Foosball";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,55):
    {

        static const unsigned char contents[] = {
        224,194,184,5,196,165,5,189,4,220,166,5,184,5,195,136,7,196,137,7,
        74,220,135,7,136,7,195,0,199,194,62,160,6,61,0,192,194,62,160,6,
        61,0,254,194,62,160,6,61,0,232,193,62,160,6,61,0,250,194,184,5,
        196,185,5,73,220,183,5,184,5,195,167,4,196,144,5,184,5,220,145,5,
        167,4,251,193,
        };

        obj.createentity(91, 168, 12, 32);  // (vertical gravity line)
        obj.createentity(139, 80, 12, 120);  // (vertical gravity line)
        obj.createentity(235, 104, 12, 96);  // (vertical gravity line)
        obj.createentity(187, 144, 12, 56);  // (vertical gravity line)
        obj.createentity(43, 48, 12, 152);  // (vertical gravity line)
        obj.createentity(91, 48, 12, 112);  // (vertical gravity line)
        obj.createentity(139, 48, 12, 24);  // (vertical gravity line)
        obj.createentity(187, 48, 12, 88);  // (vertical gravity line)
        obj.createentity(235, 48, 12, 48);  // (vertical gravity line)
        obj.createentity(283, 48, 12, 152);  // (vertical gravity line)
        obj.createentity(8, 48, 10, 0, 255510);  // (savepoint)
        rcol=5;

        roomname = "A Difficult Chord";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,55):
    {

        static const unsigned char contents[] = {
        224,194,169,5,193,153,5,177,4,195,154,5,169,5,153,5,177,4,196,154,
        5,169,5,153,5,177,4,196,154,5,169,5,153,5,177,4,196,154,5,169,
        5,199,185,6,193,186,6,64,195,184,6,152,5,186,6,64,196,184,6,152,
        5,186,6,64,196,184,6,152,5,186,6,64,196,184,6,154,4,152,4,198,
        0,199,144,7,0,197,52,168,6,51,0,196,64,144,7,64,0,196,52,144,
        6,152,4,198,0,206,52,168,6,51,0,204,52,144,6,152,4,198,0,206,
        52,168,6,51,0,204,52,144,6,152,4,198,0,206,52,168,6,51,0,204,
        52,144,6,152,4,198,0,207,144,7,0,205,52,144,6,152,4,198,0,222,
        52,144,6,152,4,198,0,222,52,144,6,152,4,198,0,222,52,144,6,152,
        4,198,0,222,52,144,6,152,4,198,0,222,52,144,6,152,4,198,0,222,
        52,144,6,152,4,198,0,199,128,6,0,206,128,6,0,197,52,144,6,152,
        4,198,0,199,168,6,51,0,204,52,168,6,51,0,196,52,144,6,152,4,
        198,0,199,168,6,51,0,204,52,168,6,51,0,196,52,144,6,152,4,198,
        0,199,168,6,51,0,204,52,168,6,51,0,196,52,144,6,152,4,198,0,
        199,168,6,51,0,204,52,168,6,51,0,196,52,144,6,152,4,198,0,199,
        168,6,51,0,204,52,168,6,51,0,196,52,144,6,152,4,198,0,199,168,
        6,51,0,197,128,6,0,197,52,168,6,51,0,196,52,144,6,152,4,198,
        0,199,168,6,51,0,196,52,168,6,51,0,196,52,168,6,51,0,196,52,
        144,6,152,4,198,169,5,199,159,7,170,5,63,196,168,5,146,7,51,0,
        196,52,145,7,170,5,63,196,168,5,130,5,152,4,207,129,5,169,5,196,
        130,5,146,6,51,0,196,52,144,6,129,5,169,5,196,130,5,152,4,215,
        146,6,51,0,196,52,144,6,152,4,222,146,6,51,0,196,52,144,6,152,
        4,222,146,6,51,0,196,52,144,6,152,4,206,
        };

        obj.createentity(16, 184, 10, 1, 255520);  // (savepoint)
        obj.createentity(131, 88, 12, 96);  // (vertical gravity line)
        obj.createentity(208, 180, 11, 40);  // (horizontal gravity line)
        obj.createentity(67, 56, 12, 80);  // (vertical gravity line)
        obj.createentity(195, 56, 12, 80);  // (vertical gravity line)
        rcol = 0;

        roomname = "The Living Dead End";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,56):
    {

        static const unsigned char contents[] = {
        161,4,207,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,
        153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,
        196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,
        57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,
        155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,
        4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,
        6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,
        58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,
        0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,
        6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,
        222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,
        161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,
        153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,
        196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,155,6,
        57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,4,222,
        155,6,57,0,196,58,153,6,161,4,222,155,6,57,0,196,58,153,6,161,
        4,222,155,6,57,0,196,58,153,6,161,4,206,
        };
        rcol=3;

        roomname = "AAAAAA";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(52,57):
    {

        static const unsigned char contents[] = {
        158,4,207,152,6,55,0,196,56,150,6,158,4,222,152,6,55,0,196,56,
        150,6,158,4,212,159,4,191,6,194,160,4,158,4,196,152,6,55,0,196,
        56,150,6,158,4,196,159,4,191,6,194,160,4,158,4,202,152,6,68,194,
        150,6,158,4,196,152,6,55,0,196,56,150,6,158,4,196,152,6,68,194,
        150,6,158,4,202,152,6,0,194,190,6,160,4,158,4,195,152,6,55,0,
        196,56,150,6,158,4,195,159,4,128,7,0,194,150,6,158,4,202,152,6,
        0,194,68,150,6,158,4,195,152,6,55,0,196,56,150,6,158,4,195,152,
        6,68,0,194,150,6,158,4,202,152,6,0,195,190,6,191,6,195,128,7,
        55,0,196,56,190,6,191,6,195,128,7,0,195,150,6,158,4,202,152,6,
        0,195,68,197,0,198,68,197,0,195,150,6,158,4,202,152,6,0,218,150,
        6,158,4,202,152,6,0,218,150,6,158,4,202,152,6,0,218,150,6,158,
        4,202,152,6,0,202,174,5,175,5,194,176,5,0,202,150,6,158,4,202,
        152,6,0,200,174,5,175,5,136,5,158,4,194,135,5,175,5,176,5,0,
        200,150,6,158,4,202,152,6,0,197,174,5,175,5,193,136,5,158,4,198,
        135,5,175,5,193,176,5,0,197,150,6,158,4,202,152,6,0,197,150,6,
        158,4,204,152,6,0,197,150,6,158,4,202,152,6,0,197,190,6,191,6,
        160,4,158,4,200,159,4,191,6,128,7,0,197,150,6,158,4,202,152,6,
        0,197,68,193,190,6,191,6,160,4,158,4,196,159,4,191,6,128,7,68,
        193,0,197,150,6,158,4,202,135,5,176,5,0,198,68,193,190,6,191,6,
        160,4,158,4,159,4,191,6,128,7,68,193,0,198,174,5,136,5,158,4,
        203,152,6,0,200,68,193,190,6,191,6,128,7,68,193,0,200,150,6,158,
        4,204,135,5,176,5,0,201,68,194,0,201,174,5,136,5,158,4,205,152,
        6,0,214,150,6,158,4,206,135,5,176,5,0,212,174,5,136,5,158,4,
        207,152,6,0,212,150,6,158,4,208,135,5,175,5,176,5,0,208,174,5,
        175,5,136,5,158,4,210,135,5,175,5,176,5,0,204,174,5,175,5,136,
        5,158,4,214,135,5,175,5,176,5,0,200,174,5,175,5,136,5,158,4,
        218,135,5,175,5,176,5,0,196,174,5,175,5,136,5,158,4,222,152,6,
        0,196,150,6,158,4,224,152,6,0,196,150,6,158,4,224,152,6,0,196,
        150,6,158,4,207,
        };
        rcol = 2;

        roomname = "Diode";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(50,52):
    {

        static const unsigned char contents[] = {
        152,4,231,153,4,185,6,195,154,4,153,4,185,6,221,154,4,152,4,193,
        146,6,0,195,144,6,146,6,64,221,184,6,154,4,152,4,146,6,0,195,
        144,6,146,6,0,221,52,144,6,152,4,146,6,0,195,144,6,146,6,0,
        221,52,144,6,152,4,146,6,0,195,184,6,186,6,0,221,52,144,6,152,
        4,146,6,0,227,52,144,6,152,4,146,6,0,227,52,144,6,152,4,146,
        6,0,227,52,144,6,152,4,146,6,0,227,52,144,6,152,4,146,6,0,
        227,52,144,6,152,4,129,5,169,5,199,170,5,0,204,63,0,193,168,5,
        169,5,194,153,5,178,4,0,196,52,144,6,152,4,201,146,6,0,204,128,
        6,0,193,144,6,152,4,194,146,6,51,0,196,52,144,6,152,4,201,146,
        6,0,193,63,0,201,168,6,0,193,144,6,152,4,194,146,6,51,0,196,
        52,144,6,152,4,201,146,6,0,193,128,6,0,201,168,6,0,193,144,6,
        152,4,194,146,6,51,0,196,52,144,6,152,4,201,146,6,0,193,168,6,
        0,201,168,6,0,193,144,6,152,4,194,146,6,51,0,196,52,144,6,152,
        4,201,146,6,0,193,168,6,0,201,168,6,0,193,144,6,152,4,194,146,
        6,51,0,196,52,144,6,152,4,201,146,6,0,193,168,6,0,201,168,6,
        0,193,144,6,152,4,194,146,6,51,0,196,52,144,6,152,4,201,146,6,
        63,193,168,6,63,201,168,6,63,193,144,6,152,4,194,146,6,51,0,196,
        52,144,6,152,4,201,129,5,169,5,193,159,7,169,5,201,159,7,169,5,
        193,130,5,152,4,194,146,6,51,0,196,52,144,6,152,4,222,146,6,51,
        0,196,52,144,6,152,4,200,153,4,185,6,212,129,6,178,4,0,196,52,
        144,6,152,4,200,146,6,0,219,52,144,6,152,4,200,146,6,0,219,52,
        144,6,152,4,200,146,6,0,219,52,144,6,152,4,200,146,6,0,219,52,
        144,6,152,4,200,146,6,0,196,168,5,169,5,214,130,5,152,4,200,146,
        6,0,196,144,6,152,4,224,146,6,0,196,144,6,152,4,224,146,6,0,
        196,144,6,152,4,216,
        };

        obj.createentity(267, 24, 12, 184);  // (vertical gravity line)
        obj.createentity(16, 24, 9,  9);  // (shiny trinket)
        obj.createentity(187, 24, 12, 64);  // (vertical gravity line)
        obj.createentity(104, 124, 11, 80);  // (horizontal gravity line)
        obj.createentity(48, 72, 10, 1, 252500);  // (savepoint)
        obj.createentity(224, 72, 10, 1, 252501);  // (savepoint)
        obj.createentity(99, 24, 12, 80);  // (vertical gravity line)
        rcol=0;

        roomname = "Young Man, It's Worth the Challenge";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(53,55):
    {

        static const unsigned char contents[] = {
        224,194,175,5,197,176,5,0,224,158,4,197,152,6,0,208,168,5,169,5,
        170,5,180,5,181,5,182,5,0,201,158,4,197,152,6,0,208,144,6,152,
        4,146,6,156,6,164,4,158,6,0,201,191,6,195,160,4,158,4,152,6,
        0,208,144,6,152,4,146,6,156,6,164,4,158,6,0,201,172,5,194,173,
        5,150,6,158,4,152,6,0,201,168,5,169,5,170,5,0,195,144,6,152,
        4,146,6,132,7,133,7,134,7,0,195,174,5,175,5,193,176,5,0,193,
        155,4,194,149,6,150,6,158,4,152,6,0,201,144,6,152,4,146,6,0,
        195,144,6,152,4,129,5,169,5,193,170,5,0,195,150,6,158,4,193,152,
        6,0,193,155,4,194,149,6,150,6,158,4,152,6,0,201,144,6,152,4,
        146,6,0,195,184,6,185,6,193,154,4,152,4,146,6,0,195,150,6,158,
        4,193,152,6,0,193,155,4,194,149,6,150,6,158,4,152,6,0,195,177,
        5,178,5,179,5,168,5,169,5,193,130,5,152,4,146,6,0,198,144,6,
        152,4,146,6,0,195,150,6,158,4,193,152,6,0,193,155,4,194,149,6,
        150,6,158,4,152,6,0,195,153,6,161,4,155,6,144,6,152,4,195,146,
        6,0,198,144,6,152,4,146,6,0,195,150,6,158,4,193,152,6,0,193,
        155,4,194,149,6,190,6,191,6,128,7,0,195,153,6,161,4,155,6,184,
        6,185,6,195,186,6,0,198,184,6,185,6,186,6,0,195,150,6,158,4,
        193,152,6,0,193,155,4,194,132,5,172,5,193,173,5,0,195,153,6,161,
        4,155,6,0,211,150,6,158,4,193,152,6,0,193,155,4,197,149,6,0,
        195,153,6,161,4,155,6,0,211,150,6,158,4,193,152,6,0,193,155,4,
        197,149,6,0,195,153,6,161,4,155,6,0,201,171,5,172,5,195,173,5,
        0,195,150,6,159,4,191,6,128,7,0,193,155,4,197,149,6,0,195,153,
        6,161,4,155,6,0,201,187,6,188,6,157,4,155,4,193,149,6,0,195,
        150,6,152,6,183,5,185,5,0,193,188,6,197,189,6,0,195,153,6,161,
        4,155,6,0,194,177,5,178,5,198,179,5,147,6,156,4,188,6,189,6,
        0,195,150,6,152,6,159,6,161,6,0,193,181,5,197,182,5,0,195,153,
        6,161,4,155,6,0,194,153,6,161,4,162,4,130,7,196,131,7,147,6,
        149,6,0,197,150,6,152,6,159,6,161,6,0,193,164,4,197,158,6,183,
        5,184,5,193,185,5,153,6,161,4,155,6,0,194,153,6,161,4,155,6,
        171,5,172,5,196,133,5,149,6,0,197,150,6,152,6,159,6,161,6,0,
        193,164,4,194,165,4,133,7,193,134,7,159,6,167,4,193,161,6,153,6,
        161,4,155,6,0,194,129,7,130,7,131,7,187,6,188,6,197,189,6,0,
        197,190,6,128,7,159,6,144,5,184,5,193,164,4,194,158,6,168,5,169,
        5,170,5,159,6,167,4,193,161,6,153,6,161,4,155,6,0,208,183,5,
        184,5,195,145,5,167,4,194,164,4,194,158,6,144,6,152,4,146,6,159,
        6,167,4,193,161,6,153,6,161,4,155,6,0,208,159,6,167,4,199,164,
        4,194,158,6,144,6,152,4,146,6,135,7,136,7,193,137,7,153,6,161,
        4,155,6,0,208,159,6,167,4,199,164,4,194,158,6,144,6,152,4,129,
        5,169,5,194,170,5,153,6,161,4,138,5,178,5,201,179,5,183,5,184,
        5,196,145,5,167,4,199,164,4,194,158,6,144,6,152,4,196,146,6,153,
        6,161,4,198,162,4,130,7,195,131,7,159,6,167,4,205,164,4,194,158,
        6,144,6,152,4,196,146,6,153,6,161,4,198,155,6,183,5,184,5,195,
        145,5,167,4,205,164,4,194,158,6,144,6,152,4,196,146,6,153,6,161,
        4,198,155,6,159,6,167,4,210,164,4,194,158,6,144,6,152,4,196,146,
        6,153,6,161,4,198,155,6,159,6,167,4,210,
        };

        rcol = 6;

        roomname = "Anomaly";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(54,55):
    {

        static const unsigned char contents[] = {
        220,159,6,167,4,199,161,6,156,6,164,4,0,219,159,6,167,4,199,161,
        6,156,6,164,4,0,219,159,6,167,4,197,168,4,136,7,137,7,156,6,
        164,4,0,219,159,6,167,4,197,161,6,180,5,181,5,142,5,164,4,0,
        219,159,6,167,4,195,168,4,136,7,137,7,156,6,164,4,194,0,219,159,
        6,167,4,195,161,6,180,5,181,5,142,5,164,4,194,0,219,159,6,167,
        4,193,168,4,136,7,137,7,156,6,164,4,196,0,219,159,6,167,4,193,
        161,6,180,5,181,5,142,5,164,4,196,0,219,159,6,168,4,136,7,137,
        7,156,6,164,4,198,0,219,159,6,161,6,180,5,181,5,142,5,164,4,
        198,0,219,135,7,137,7,156,6,164,4,200,0,219,180,5,181,5,142,5,
        164,4,200,0,219,156,6,164,4,202,0,219,156,6,164,4,202,0,219,156,
        6,164,4,202,0,217,180,5,181,5,142,5,164,4,202,0,217,156,6,164,
        4,204,0,215,180,5,181,5,142,5,164,4,204,0,215,156,6,164,4,206,
        0,202,168,5,169,5,195,170,5,0,196,174,5,176,5,156,6,164,4,206,
        0,202,144,6,152,4,195,146,6,0,196,150,6,152,6,132,7,133,7,194,
        166,4,164,4,202,178,5,194,179,5,174,5,175,5,193,176,5,171,5,172,
        5,173,5,184,6,154,4,152,4,193,153,4,186,6,171,5,172,5,173,5,
        174,5,175,5,136,5,152,6,177,5,178,5,193,179,5,132,7,133,7,166,
        4,164,4,200,161,4,194,155,6,150,6,158,4,193,152,6,147,6,155,4,
        132,5,173,5,184,6,154,4,153,4,186,6,171,5,133,5,155,4,149,6,
        150,6,158,4,193,152,6,153,6,161,4,193,138,5,178,5,179,5,132,7,
        133,7,166,4,164,4,198,161,4,194,155,6,190,6,160,4,158,4,152,6,
        187,6,157,4,155,4,132,5,173,5,184,6,186,6,171,5,133,5,155,4,
        156,4,189,6,150,6,158,4,159,4,128,7,153,6,161,4,195,138,5,178,
        5,179,5,132,7,133,7,166,4,164,4,196,161,4,194,138,5,179,5,190,
        6,160,4,135,5,176,5,187,6,157,4,155,4,132,5,172,5,193,133,5,
        155,4,156,4,189,6,174,5,136,5,159,4,128,7,177,5,139,5,161,4,
        197,138,5,178,5,179,5,132,7,133,7,166,4,164,4,194,161,4,195,138,
        5,179,5,150,6,158,4,135,5,176,5,187,6,188,6,157,4,155,4,193,
        156,4,188,6,189,6,174,5,136,5,158,4,152,6,177,5,139,5,161,4,
        200,138,5,178,5,179,5,132,7,133,7,166,4,164,4,161,4,196,155,6,
        190,6,160,4,158,4,135,5,175,5,176,5,187,6,188,6,193,189,6,174,
        5,175,5,136,5,158,4,159,4,128,7,153,6,161,4,203,138,5,178,5,
        179,5,132,7,133,7,161,4,196,138,5,179,5,190,6,191,6,160,4,158,
        4,135,5,175,5,195,136,5,158,4,159,4,191,6,128,7,177,5,139,5,
        161,4,205,138,5,178,5,193,161,4,197,138,5,178,5,179,5,150,6,158,
        4,199,152,6,177,5,178,5,139,5,161,4,217,155,6,150,6,158,4,199,
        152,6,153,6,161,4,211,
        };

        obj.createentity(104, 128, 9, 11);  // (shiny trinket)
        rcol = 6;

        roomname = "Purest Unobtainium";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }


    case rn(52,58):
    {

        static const unsigned char contents[] = {
        167,4,196,161,6,0,159,6,167,4,200,161,6,0,196,159,6,167,4,212,
        161,6,0,159,6,167,4,200,161,6,0,196,159,6,167,4,212,161,6,0,
        159,6,167,4,200,161,6,0,196,159,6,167,4,212,161,6,0,159,6,167,
        4,193,168,4,136,7,197,137,7,0,196,135,7,136,7,202,169,4,167,4,
        200,161,6,0,159,6,167,4,193,161,6,0,215,159,6,167,4,200,161,6,
        0,159,6,167,4,193,161,6,0,183,5,184,5,195,185,5,0,196,183,5,
        184,5,200,185,5,0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,
        6,0,159,6,167,4,195,161,6,0,196,159,6,167,4,200,161,6,0,159,
        6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,159,6,167,4,168,
        4,136,7,193,137,7,0,196,135,7,136,7,198,169,4,167,4,161,6,0,
        159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,159,6,167,4,
        161,6,0,207,159,6,167,4,161,6,0,159,6,167,4,200,161,6,0,159,
        6,167,4,193,161,6,0,159,6,167,4,161,6,0,183,5,185,5,0,196,
        183,5,184,5,196,185,5,0,159,6,167,4,161,6,0,159,6,167,4,200,
        161,6,0,159,6,167,4,193,161,6,0,159,6,167,4,161,6,0,159,6,
        161,6,0,196,135,7,136,7,195,169,4,161,6,0,159,6,167,4,161,6,
        0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,159,6,167,
        4,161,6,0,159,6,161,6,0,201,159,6,161,6,0,159,6,167,4,161,
        6,0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,159,6,
        167,4,161,6,0,159,6,161,6,0,196,183,5,184,5,193,185,5,0,159,
        6,161,6,0,159,6,167,4,161,6,0,159,6,167,4,200,161,6,0,159,
        6,167,4,193,161,6,0,159,6,167,4,161,6,0,159,6,161,6,0,196,
        135,7,136,7,169,4,161,6,0,159,6,161,6,0,159,6,167,4,161,6,
        0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,159,6,167,
        4,161,6,0,159,6,161,6,0,198,159,6,161,6,0,159,6,161,6,0,
        159,6,167,4,161,6,0,159,6,167,4,200,161,6,0,159,6,167,4,193,
        161,6,0,159,6,167,4,161,6,0,159,6,161,6,0,196,140,6,0,159,
        6,161,6,0,159,6,161,6,0,159,6,167,4,161,6,0,159,6,167,4,
        200,161,6,0,159,6,167,4,193,161,6,0,159,6,167,4,161,6,0,159,
        6,161,6,0,196,156,7,0,159,6,161,6,0,159,6,161,6,0,159,6,
        167,4,161,6,0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,
        0,159,6,167,4,161,6,0,159,6,161,6,0,198,159,6,161,6,0,159,
        6,161,6,0,159,6,167,4,161,6,0,159,6,167,4,200,161,6,0,159,
        6,167,4,193,161,6,0,159,6,167,4,161,6,0,159,6,161,6,0,196,
        183,5,184,5,145,5,161,6,0,159,6,161,6,0,159,6,167,4,161,6,
        0,159,6,167,4,195,136,7,196,137,7,0,135,7,136,7,193,137,7,0,
        135,7,136,7,137,7,0,135,7,137,7,0,196,135,7,136,7,193,137,7,
        0,159,6,161,6,0,159,6,167,4,161,6,0,159,6,167,4,195,0,219,
        159,6,161,6,0,159,6,167,4,161,6,0,159,6,167,4,195,0,214,183,
        5,184,5,195,145,5,161,6,0,159,6,167,4,161,6,0,159,6,167,4,
        195,0,214,135,7,136,7,196,137,7,0,159,6,167,4,161,6,0,159,6,
        167,4,195,0,222,159,6,167,4,161,6,0,159,6,167,4,195,0,214,183,
        5,184,5,198,145,5,167,4,161,6,0,159,6,167,4,195,184,5,196,185,
        5,0,183,5,184,5,193,185,5,0,183,5,184,5,201,145,5,167,4,200,
        161,6,0,159,6,167,4,200,161,6,0,159,6,167,4,193,161,6,0,135,
        7,136,7,211,137,7,0,159,6,167,4,200,161,6,0,159,6,167,4,193,
        161,6,0,215,159,6,167,4,200,161,6,0,159,6,167,4,193,144,5,184,
        5,215,145,5,167,4,200,161,6,0,159,6,167,4,223,
        };

        obj.createentity(112, 184, 10, 1, 258520);  // (savepoint)
        rcol = 5;

        roomname = "I Smell Ozone";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(51,58):
    {

        static const unsigned char contents[] = {
        152,4,247,203,185,6,231,0,199,195,169,5,231,152,4,223,194,
        };
        rcol=0;

        if(!game.intimetrial || game.translator_exploring)
        {
            if(game.companion==0 && !obj.flags[9] &&  !game.crewstats[5])   //also need to check if he's rescued in a previous game
            {
                obj.createentity(32, 177, 18, 16, 1, 17, 1);
                obj.createblock(1, 24*8, 0, 32, 240, 33);
            }
        }

        roomname = "Why So Blue?";

        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

    case rn(50,58):
    {

        static const unsigned char contents[] = {
        161,4,250,193,162,4,130,7,200,163,4,161,4,194,162,4,130,7,206,163,
        4,161,4,200,155,6,0,200,153,6,161,4,194,155,6,0,206,153,6,161,
        4,200,155,6,0,200,153,6,161,4,194,155,6,0,206,153,6,161,4,200,
        155,6,0,199,177,5,139,5,161,4,194,138,5,179,5,0,205,153,6,161,
        4,200,155,6,0,199,129,7,130,7,196,131,7,0,205,153,6,161,4,200,
        155,6,0,220,153,6,161,4,200,155,6,0,220,153,6,161,4,200,155,6,
        0,220,153,6,161,4,200,155,6,0,194,177,5,179,5,0,215,153,6,161,
        4,200,138,5,178,5,194,139,5,155,6,0,215,153,6,161,4,205,155,6,
        0,215,153,6,161,4,205,155,6,0,215,153,6,161,4,205,155,6,0,215,
        153,6,161,4,200,162,4,130,7,194,163,4,155,6,0,215,153,6,161,4,
        200,155,6,0,194,129,7,131,7,0,215,153,6,161,4,200,155,6,0,220,
        153,6,161,4,200,155,6,0,220,129,7,130,7,197,161,4,194,155,6,0,
        227,161,4,194,155,6,0,199,177,5,178,5,196,179,5,0,212,161,4,194,
        155,6,0,199,129,7,163,4,161,4,194,162,4,131,7,0,212,161,4,194,
        155,6,0,200,153,6,161,4,194,155,6,0,213,161,4,194,155,6,0,200,
        153,6,161,4,194,155,6,0,213,161,4,194,138,5,178,5,200,139,5,161,
        4,194,138,5,178,5,213,161,4,223,194,
        };
        rcol=3;


        obj.createentity((10 * 8)-4, (8 * 8) + 4, 14); //Teleporter!

        if(game.intimetrial)
        {
            obj.createblock(1, 280, 0, 32, 240, 82);
        }

        roomname = "Philadelphia Experiment";
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }

#endif
    default:
    {
        static const unsigned char contents[] = {240, 210};
        result = contents;
        *dataLen = sizeof(contents);
        break;
    }
    }

    return result;
}
