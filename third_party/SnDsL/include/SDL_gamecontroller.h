#pragma once
#include <stdint.h>

typedef struct _SDL_GameController {} SDL_GameController;
typedef enum {
	SDL_CONTROLLER_BUTTON_INVALID = -1,
	SDL_CONTROLLER_BUTTON_A,
	SDL_CONTROLLER_BUTTON_B,
	SDL_CONTROLLER_BUTTON_X,
	SDL_CONTROLLER_BUTTON_Y,
	SDL_CONTROLLER_BUTTON_BACK,
	SDL_CONTROLLER_BUTTON_GUIDE,
	SDL_CONTROLLER_BUTTON_START,
	SDL_CONTROLLER_BUTTON_LEFTSTICK,
	SDL_CONTROLLER_BUTTON_RIGHTSTICK,
	SDL_CONTROLLER_BUTTON_LEFTSHOULDER,
	SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,
	SDL_CONTROLLER_BUTTON_DPAD_UP,
	SDL_CONTROLLER_BUTTON_DPAD_DOWN,
	SDL_CONTROLLER_BUTTON_DPAD_LEFT,
	SDL_CONTROLLER_BUTTON_DPAD_RIGHT,
	SDL_CONTROLLER_BUTTON_MISC1,
	SDL_CONTROLLER_BUTTON_PADDLE1,
	SDL_CONTROLLER_BUTTON_PADDLE2,
	SDL_CONTROLLER_BUTTON_PADDLE3,
	SDL_CONTROLLER_BUTTON_PADDLE4,
	SDL_CONTROLLER_BUTTON_TOUCHPAD,
	SDL_CONTROLLER_BUTTON_MAX
} SDL_GameControllerButton;
typedef enum {
	SDL_CONTROLLER_AXIS_INVALID = -1,
	SDL_CONTROLLER_AXIS_LEFTX,
	SDL_CONTROLLER_AXIS_LEFTY,
	SDL_CONTROLLER_AXIS_RIGHTX,
	SDL_CONTROLLER_AXIS_RIGHTY,
	SDL_CONTROLLER_AXIS_TRIGGERLEFT,
	SDL_CONTROLLER_AXIS_TRIGGERRIGHT,
	SDL_CONTROLLER_AXIS_MAX
} SDL_GameControllerAxis;

#define SDL_GameControllerOpen(index) NULL
#define SDL_GameControllerClose(gc)
#define SDL_GameControllerName(index) "Default"

#define SDL_GameControllerGetVendor(gc) 0x057e // Nintendo
#define SDL_GameControllerGetProduct(gc) 0 // unspecified

#define SDL_GameControllerType int
#define SDL_GameControllerGetType(gc) 0
#define SDL_CONTROLLER_TYPE_PS3 0
#define SDL_CONTROLLER_TYPE_PS4 0
#define SDL_CONTROLLER_TYPE_PS5 0

#define SDL_GameControllerAddMappingsFromFile(file) 0


// joystick.h

typedef int32_t SDL_JoystickID;
#define SDL_JoystickInstanceID(index) 0